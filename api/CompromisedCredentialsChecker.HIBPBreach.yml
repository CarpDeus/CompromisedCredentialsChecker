### YamlMime:ManagedReference
items:
- uid: CompromisedCredentialsChecker.HIBPBreach
  commentId: T:CompromisedCredentialsChecker.HIBPBreach
  id: HIBPBreach
  parent: CompromisedCredentialsChecker
  children:
  - CompromisedCredentialsChecker.HIBPBreach.AddedDate
  - CompromisedCredentialsChecker.HIBPBreach.BreachDate
  - CompromisedCredentialsChecker.HIBPBreach.DataClasses
  - CompromisedCredentialsChecker.HIBPBreach.Description
  - CompromisedCredentialsChecker.HIBPBreach.Domain
  - CompromisedCredentialsChecker.HIBPBreach.IsFabricated
  - CompromisedCredentialsChecker.HIBPBreach.IsMalware
  - CompromisedCredentialsChecker.HIBPBreach.IsRetired
  - CompromisedCredentialsChecker.HIBPBreach.IsSensitive
  - CompromisedCredentialsChecker.HIBPBreach.IsSpamList
  - CompromisedCredentialsChecker.HIBPBreach.IsSubscriptionFree
  - CompromisedCredentialsChecker.HIBPBreach.IsVerified
  - CompromisedCredentialsChecker.HIBPBreach.LogoPath
  - CompromisedCredentialsChecker.HIBPBreach.ModifiedDate
  - CompromisedCredentialsChecker.HIBPBreach.Name
  - CompromisedCredentialsChecker.HIBPBreach.PwnCount
  - CompromisedCredentialsChecker.HIBPBreach.Title
  langs:
  - csharp
  - vb
  name: HIBPBreach
  nameWithType: HIBPBreach
  fullName: CompromisedCredentialsChecker.HIBPBreach
  type: Class
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: HIBPBreach
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 464
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: Breach information from the HaveIBeenPwned API
  example: []
  syntax:
    content: public class HIBPBreach
    content.vb: Public Class HIBPBreach
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: CompromisedCredentialsChecker.HIBPBreach.Name
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.Name
  id: Name
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: HIBPBreach.Name
  fullName: CompromisedCredentialsChecker.HIBPBreach.Name
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: Name
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 469
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: A Pascal-cased name representing the breach which is unique across all other breaches. This value never changes and may be used to name dependent assets (such as images) but should not be shown directly to end users (see the "Title" attribute instead).
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: CompromisedCredentialsChecker.HIBPBreach.Name*
- uid: CompromisedCredentialsChecker.HIBPBreach.Title
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.Title
  id: Title
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: HIBPBreach.Title
  fullName: CompromisedCredentialsChecker.HIBPBreach.Title
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: Title
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 473
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: A descriptive title for the breach suitable for displaying to end users. It's unique across all breaches but individual values may change in the future (i.e. if another breach occurs against an organisation already in the system). If a stable value is required to reference the breach, refer to the "Name" attribute instead.
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: CompromisedCredentialsChecker.HIBPBreach.Title*
- uid: CompromisedCredentialsChecker.HIBPBreach.Domain
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.Domain
  id: Domain
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: Domain
  nameWithType: HIBPBreach.Domain
  fullName: CompromisedCredentialsChecker.HIBPBreach.Domain
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: Domain
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 477
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: The domain of the primary website the breach occurred on. This may be used for identifying other assets external systems may have for the site.
  example: []
  syntax:
    content: public string Domain { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Domain As String
  overload: CompromisedCredentialsChecker.HIBPBreach.Domain*
- uid: CompromisedCredentialsChecker.HIBPBreach.BreachDate
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.BreachDate
  id: BreachDate
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: BreachDate
  nameWithType: HIBPBreach.BreachDate
  fullName: CompromisedCredentialsChecker.HIBPBreach.BreachDate
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: BreachDate
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 481
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: The date (with no time) the breach originally occurred on in ISO 8601 format. This is not always accurate â€” frequently breaches are discovered and reported long after the original incident. Use this attribute as a guide only.
  example: []
  syntax:
    content: public DateTime BreachDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property BreachDate As Date
  overload: CompromisedCredentialsChecker.HIBPBreach.BreachDate*
- uid: CompromisedCredentialsChecker.HIBPBreach.AddedDate
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.AddedDate
  id: AddedDate
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: AddedDate
  nameWithType: HIBPBreach.AddedDate
  fullName: CompromisedCredentialsChecker.HIBPBreach.AddedDate
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: AddedDate
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 485
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: The date and time (precision to the minute) the breach was added to the system in ISO 8601 format.
  example: []
  syntax:
    content: public DateTime AddedDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property AddedDate As Date
  overload: CompromisedCredentialsChecker.HIBPBreach.AddedDate*
- uid: CompromisedCredentialsChecker.HIBPBreach.ModifiedDate
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.ModifiedDate
  id: ModifiedDate
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: ModifiedDate
  nameWithType: HIBPBreach.ModifiedDate
  fullName: CompromisedCredentialsChecker.HIBPBreach.ModifiedDate
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: ModifiedDate
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 489
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: The date and time (precision to the minute) the breach was modified in ISO 8601 format. This will only differ from the AddedDate attribute if other attributes represented here are changed or data in the breach itself is changed (i.e. additional data is identified and loaded). It is always either equal to or greater then the AddedDate attribute, never less than.
  example: []
  syntax:
    content: public DateTime ModifiedDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property ModifiedDate As Date
  overload: CompromisedCredentialsChecker.HIBPBreach.ModifiedDate*
- uid: CompromisedCredentialsChecker.HIBPBreach.PwnCount
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.PwnCount
  id: PwnCount
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: PwnCount
  nameWithType: HIBPBreach.PwnCount
  fullName: CompromisedCredentialsChecker.HIBPBreach.PwnCount
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: PwnCount
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 493
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: The total number of accounts loaded into the system. This is usually less than the total number reported by the media due to duplication or other data integrity issues in the source data.
  example: []
  syntax:
    content: public int PwnCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PwnCount As Integer
  overload: CompromisedCredentialsChecker.HIBPBreach.PwnCount*
- uid: CompromisedCredentialsChecker.HIBPBreach.Description
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.Description
  id: Description
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: HIBPBreach.Description
  fullName: CompromisedCredentialsChecker.HIBPBreach.Description
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: Description
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 497
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: Contains an overview of the breach represented in HTML markup. The description may include markup such as emphasis and strong tags as well as hyperlinks.
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: CompromisedCredentialsChecker.HIBPBreach.Description*
- uid: CompromisedCredentialsChecker.HIBPBreach.LogoPath
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.LogoPath
  id: LogoPath
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: LogoPath
  nameWithType: HIBPBreach.LogoPath
  fullName: CompromisedCredentialsChecker.HIBPBreach.LogoPath
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: LogoPath
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 501
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: A URI that specifies where a logo for the breached service can be found. Logos are always in PNG format.
  example: []
  syntax:
    content: public string LogoPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LogoPath As String
  overload: CompromisedCredentialsChecker.HIBPBreach.LogoPath*
- uid: CompromisedCredentialsChecker.HIBPBreach.DataClasses
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.DataClasses
  id: DataClasses
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: DataClasses
  nameWithType: HIBPBreach.DataClasses
  fullName: CompromisedCredentialsChecker.HIBPBreach.DataClasses
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: DataClasses
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 505
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: This attribute describes the nature of the data compromised in the breach and contains an alphabetically ordered string array of impacted data classes.
  example: []
  syntax:
    content: public List<string> DataClasses { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property DataClasses As List(Of String)
  overload: CompromisedCredentialsChecker.HIBPBreach.DataClasses*
- uid: CompromisedCredentialsChecker.HIBPBreach.IsVerified
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.IsVerified
  id: IsVerified
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: IsVerified
  nameWithType: HIBPBreach.IsVerified
  fullName: CompromisedCredentialsChecker.HIBPBreach.IsVerified
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: IsVerified
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 509
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: Indicates that the breach is considered unverified. An unverified breach may not have been hacked from the indicated website. An unverified breach is still loaded into HIBP when there's sufficient confidence that a significant portion of the data is legitimate.
  example: []
  syntax:
    content: public bool IsVerified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsVerified As Boolean
  overload: CompromisedCredentialsChecker.HIBPBreach.IsVerified*
- uid: CompromisedCredentialsChecker.HIBPBreach.IsFabricated
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.IsFabricated
  id: IsFabricated
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: IsFabricated
  nameWithType: HIBPBreach.IsFabricated
  fullName: CompromisedCredentialsChecker.HIBPBreach.IsFabricated
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: IsFabricated
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 513
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: Indicates that the breach is considered unverified. An unverified breach may not have been hacked from the indicated website. An unverified breach is still loaded into HIBP when there's sufficient confidence that a significant portion of the data is legitimate.
  example: []
  syntax:
    content: public bool IsFabricated { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsFabricated As Boolean
  overload: CompromisedCredentialsChecker.HIBPBreach.IsFabricated*
- uid: CompromisedCredentialsChecker.HIBPBreach.IsSensitive
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.IsSensitive
  id: IsSensitive
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: IsSensitive
  nameWithType: HIBPBreach.IsSensitive
  fullName: CompromisedCredentialsChecker.HIBPBreach.IsSensitive
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: IsSensitive
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 517
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: Indicates if the breach is considered sensitive. The public API will not return any accounts for a breach flagged as sensitive.
  example: []
  syntax:
    content: public bool IsSensitive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSensitive As Boolean
  overload: CompromisedCredentialsChecker.HIBPBreach.IsSensitive*
- uid: CompromisedCredentialsChecker.HIBPBreach.IsRetired
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.IsRetired
  id: IsRetired
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: IsRetired
  nameWithType: HIBPBreach.IsRetired
  fullName: CompromisedCredentialsChecker.HIBPBreach.IsRetired
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: IsRetired
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 521
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: Indicates if the breach has been retired. This data has been permanently removed and will not be returned by the API.
  example: []
  syntax:
    content: public bool IsRetired { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsRetired As Boolean
  overload: CompromisedCredentialsChecker.HIBPBreach.IsRetired*
- uid: CompromisedCredentialsChecker.HIBPBreach.IsSpamList
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.IsSpamList
  id: IsSpamList
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: IsSpamList
  nameWithType: HIBPBreach.IsSpamList
  fullName: CompromisedCredentialsChecker.HIBPBreach.IsSpamList
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: IsSpamList
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 525
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: Indicates if the breach has been retired. This data has been permanently removed and will not be returned by the API.
  example: []
  syntax:
    content: public bool IsSpamList { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSpamList As Boolean
  overload: CompromisedCredentialsChecker.HIBPBreach.IsSpamList*
- uid: CompromisedCredentialsChecker.HIBPBreach.IsMalware
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.IsMalware
  id: IsMalware
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: IsMalware
  nameWithType: HIBPBreach.IsMalware
  fullName: CompromisedCredentialsChecker.HIBPBreach.IsMalware
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: IsMalware
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 529
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: Indicates if the breach is sourced from malware. This flag has no impact on any other attributes, it merely flags that the data was sourced from a malware campaign rather than a security compromise of an online service.
  example: []
  syntax:
    content: public bool IsMalware { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsMalware As Boolean
  overload: CompromisedCredentialsChecker.HIBPBreach.IsMalware*
- uid: CompromisedCredentialsChecker.HIBPBreach.IsSubscriptionFree
  commentId: P:CompromisedCredentialsChecker.HIBPBreach.IsSubscriptionFree
  id: IsSubscriptionFree
  parent: CompromisedCredentialsChecker.HIBPBreach
  langs:
  - csharp
  - vb
  name: IsSubscriptionFree
  nameWithType: HIBPBreach.IsSubscriptionFree
  fullName: CompromisedCredentialsChecker.HIBPBreach.IsSubscriptionFree
  type: Property
  source:
    remote:
      path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
      branch: main
      repo: https://github.com/CarpDeus/CompromisedCredentialsChecker.git
    id: IsSubscriptionFree
    path: src/CompromisedCredentialsChecker/CompromisedCredentialChecker.cs
    startLine: 531
  assemblies:
  - CompromisedCredentialsChecker
  namespace: CompromisedCredentialsChecker
  summary: Indicates if the breach is subscription free. This flag has no impact on any other attributes, it is only used when running a domain search where a sufficiently sized subscription isn't present.
  example: []
  syntax:
    content: public bool IsSubscriptionFree { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSubscriptionFree As Boolean
  overload: CompromisedCredentialsChecker.HIBPBreach.IsSubscriptionFree*
references:
- uid: CompromisedCredentialsChecker
  commentId: N:CompromisedCredentialsChecker
  href: CompromisedCredentialsChecker.html
  name: CompromisedCredentialsChecker
  nameWithType: CompromisedCredentialsChecker
  fullName: CompromisedCredentialsChecker
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CompromisedCredentialsChecker.HIBPBreach.Name*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.Name
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_Name
  name: Name
  nameWithType: HIBPBreach.Name
  fullName: CompromisedCredentialsChecker.HIBPBreach.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: CompromisedCredentialsChecker.HIBPBreach.Title*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.Title
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_Title
  name: Title
  nameWithType: HIBPBreach.Title
  fullName: CompromisedCredentialsChecker.HIBPBreach.Title
- uid: CompromisedCredentialsChecker.HIBPBreach.Domain*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.Domain
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_Domain
  name: Domain
  nameWithType: HIBPBreach.Domain
  fullName: CompromisedCredentialsChecker.HIBPBreach.Domain
- uid: CompromisedCredentialsChecker.HIBPBreach.BreachDate*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.BreachDate
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_BreachDate
  name: BreachDate
  nameWithType: HIBPBreach.BreachDate
  fullName: CompromisedCredentialsChecker.HIBPBreach.BreachDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: CompromisedCredentialsChecker.HIBPBreach.AddedDate*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.AddedDate
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_AddedDate
  name: AddedDate
  nameWithType: HIBPBreach.AddedDate
  fullName: CompromisedCredentialsChecker.HIBPBreach.AddedDate
- uid: CompromisedCredentialsChecker.HIBPBreach.ModifiedDate*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.ModifiedDate
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_ModifiedDate
  name: ModifiedDate
  nameWithType: HIBPBreach.ModifiedDate
  fullName: CompromisedCredentialsChecker.HIBPBreach.ModifiedDate
- uid: CompromisedCredentialsChecker.HIBPBreach.PwnCount*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.PwnCount
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_PwnCount
  name: PwnCount
  nameWithType: HIBPBreach.PwnCount
  fullName: CompromisedCredentialsChecker.HIBPBreach.PwnCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: CompromisedCredentialsChecker.HIBPBreach.Description*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.Description
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_Description
  name: Description
  nameWithType: HIBPBreach.Description
  fullName: CompromisedCredentialsChecker.HIBPBreach.Description
- uid: CompromisedCredentialsChecker.HIBPBreach.LogoPath*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.LogoPath
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_LogoPath
  name: LogoPath
  nameWithType: HIBPBreach.LogoPath
  fullName: CompromisedCredentialsChecker.HIBPBreach.LogoPath
- uid: CompromisedCredentialsChecker.HIBPBreach.DataClasses*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.DataClasses
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_DataClasses
  name: DataClasses
  nameWithType: HIBPBreach.DataClasses
  fullName: CompromisedCredentialsChecker.HIBPBreach.DataClasses
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: CompromisedCredentialsChecker.HIBPBreach.IsVerified*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.IsVerified
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_IsVerified
  name: IsVerified
  nameWithType: HIBPBreach.IsVerified
  fullName: CompromisedCredentialsChecker.HIBPBreach.IsVerified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: CompromisedCredentialsChecker.HIBPBreach.IsFabricated*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.IsFabricated
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_IsFabricated
  name: IsFabricated
  nameWithType: HIBPBreach.IsFabricated
  fullName: CompromisedCredentialsChecker.HIBPBreach.IsFabricated
- uid: CompromisedCredentialsChecker.HIBPBreach.IsSensitive*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.IsSensitive
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_IsSensitive
  name: IsSensitive
  nameWithType: HIBPBreach.IsSensitive
  fullName: CompromisedCredentialsChecker.HIBPBreach.IsSensitive
- uid: CompromisedCredentialsChecker.HIBPBreach.IsRetired*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.IsRetired
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_IsRetired
  name: IsRetired
  nameWithType: HIBPBreach.IsRetired
  fullName: CompromisedCredentialsChecker.HIBPBreach.IsRetired
- uid: CompromisedCredentialsChecker.HIBPBreach.IsSpamList*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.IsSpamList
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_IsSpamList
  name: IsSpamList
  nameWithType: HIBPBreach.IsSpamList
  fullName: CompromisedCredentialsChecker.HIBPBreach.IsSpamList
- uid: CompromisedCredentialsChecker.HIBPBreach.IsMalware*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.IsMalware
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_IsMalware
  name: IsMalware
  nameWithType: HIBPBreach.IsMalware
  fullName: CompromisedCredentialsChecker.HIBPBreach.IsMalware
- uid: CompromisedCredentialsChecker.HIBPBreach.IsSubscriptionFree*
  commentId: Overload:CompromisedCredentialsChecker.HIBPBreach.IsSubscriptionFree
  href: CompromisedCredentialsChecker.HIBPBreach.html#CompromisedCredentialsChecker_HIBPBreach_IsSubscriptionFree
  name: IsSubscriptionFree
  nameWithType: HIBPBreach.IsSubscriptionFree
  fullName: CompromisedCredentialsChecker.HIBPBreach.IsSubscriptionFree
